version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    restart: always
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    ports:
      - "8080:80" # Symfony accessible via localhost:8080
    depends_on:
      - database
    environment:
      APP_ENV: dev
      DATABASE_URL: "mysql://user:password@database:3306/dbname"

  database:
    image: mysql:8.0
    container_name: symfony_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: dbname
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306" # La base MySQL sera accessible sur localhost:3307
    volumes:
      - db_data:/var/lib/mysql

  adminer:
    image: adminer
    container_name: symfony_adminer
    restart: always
    ports:
      - "8081:8080" # Interface Adminer accessible via localhost:8081

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
